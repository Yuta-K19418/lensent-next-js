AWSTemplateFormatVersion: "2010-09-09"
Description: Create Fargate and ALB For LenSentNextjsApp

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Project Name Prefix"
        Parameters:
          - ProjectName
      - Label:
          default: "Fargate for ECS Configuration"
        Parameters:
          - ECSClusterName
          - ECSTaskName
          - ECSTaskCPUUnit
          - ECSTaskMemory
          - ECSContainerName
          - ECSImageName
          - ECSServiceName
          - ECSTaskDesiredCount
          - AUTH0BaseUrl
          - AUTH0IssuerBaseUrl
          - AUTH0Secret
          - AUTH0ClientId
          - AUTH0ClientSecret
          - RedirectUrl
          - PostLogoutRedirectUri
          - Audience
          - NEXTPulicAudience
          - NEXTPublicTranslationApiUrl

      # - Label:
      #     default: "Scaling Configuration"
      #   Parameters:
      #     - ServiceScaleEvaluationPeriods
      #     - ServiceCpuScaleOutThreshold
      #     - ServiceCpuScaleInThreshold
      #     - TaskMinContainerCount
      #     - TaskMaxContainerCount

    ParameterLabels:
      ECSClusterName:
        default: "ECSClusterName"
      ECSTaskName:
        default: "ECSTaskName"
      ECSTaskCPUUnit:
        default: "ECSTaskCPUUnit"
      ECSTaskMemory:
        default: "ECSTaskMemory"
      ECSContainerName:
        default: "ECSContainerName"
      ECSImageName:
        default: "ECSImageName"
      ECSServiceName:
        default: "ECSServiceName"
      ECSTaskDesiredCount:
        default: "ECSTaskDesiredCount"
      AUTH0BaseUrl:
        default: "AUTH0BaseUrl"
      AUTH0IssuerBaseUrl:
        default: "AUTH0IssuerBaseUrl"
      AUTH0Secret:
        default: "AUTH0Secret"
      AUTH0ClientId:
        default: "AUTH0ClientId"
      AUTH0ClientSecret:
        default: "AUTH0ClientSecret"
      RedirectUrl:
        default: "RedirectUrl"
      PostLogoutRedirectUri:
        default: "PostLogoutRedirectUri"
      Audience:
        default: "Audience"
      NEXTPulicAudience:
        default: "NEXTPulicAudience"
      NEXTPublicTranslationApiUrl:
        default: "NEXTPublicTranslationApiUrl"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  ProjectName:
    Default: lensent-next-js
    Type: String

  #ECSClusterName
  ECSClusterName:
    Type: String
    Default: "cluster"

  #ECSTaskName
  ECSTaskName:
    Type: String
    Default: "next-js-task"

  #ECSTaskCPUUnit
  ECSTaskCPUUnit:
    AllowedValues: [256, 512, 1024, 2048, 4096]
    Type: String
    Default: "256"

  #ECSTaskMemory
  ECSTaskMemory:
    AllowedValues: [256, 512, 1024, 2048, 4096]
    Type: String
    Default: "512"

  #ECSContainerName
  ECSContainerName:
    Type: String
    Default: "next-js-container"

  #ECSImageName
  ECSImageName:
    Type: String
    Default: "xxxxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/lensent-ecr:latest"

  #ECSServiceName
  ECSServiceName:
    Type: String
    Default: "next-js-service"

  #ECSTaskDesiredCount
  ECSTaskDesiredCount:
    Type: Number
    Default: 1

  #AUTH0BaseUrl
  AUTH0BaseUrl:
    Type: String
    Default: "https://www.lensent.tk"

  #AUTH0IssuerBaseUrl
  AUTH0IssuerBaseUrl:
    Type: String
    Default: "https://dev-ewyrftmq.jp.auth0.com"

  #AUTH0Secret
  AUTH0Secret:
    Type: String
    Default: "secret"

  #AUTH0ClientId
  AUTH0ClientId:
    Type: String
    Default: "clientId"

  #AUTH0ClientSecret
  AUTH0ClientSecret:
    Type: String
    Default: "clientSecret"

  #Audience
  Audience:
    Type: String
    Default: "http://localhost:8080/api"

  #NEXTPulicAudience
  NEXTPulicAudience:
    Type: String
    Default: "http://localhost:8080/api"

  #NEXTPublicTranslationApiUrl
  NEXTPublicTranslationApiUrl:
    Type: String
    Default: "https://script.google.com/macros/s/AKfycbyzmZMNyYMo17YU-mf18_4SwoS7OlI3SjQddlSw4PycGGt_Ms8LHCYSI8AddZjTWEdFMA/exec"

# Scaling params
# ServiceScaleEvaluationPeriods:
#   Description: The number of periods over which data is compared to the specified threshold
#   Type: Number
#   Default: 2
#   MinValue: 2

# ServiceCpuScaleOutThreshold:
#   Type: Number
#   Description: Average CPU value to trigger auto scaling out
#   Default: 50
#   MinValue: 0
#   MaxValue: 100
#   ConstraintDescription: Value must be between 0 and 100

# ServiceCpuScaleInThreshold:
#   Type: Number
#   Description: Average CPU value to trigger auto scaling in
#   Default: 25
#   MinValue: 0
#   MaxValue: 100
#   ConstraintDescription: Value must be between 0 and 100

# TaskMinContainerCount:
#   Type: Number
#   Description: Minimum number of containers to run for the service
#   Default: 1
#   MinValue: 1
#   ConstraintDescription: Value must be at least one

# TaskMaxContainerCount:
#   Type: Number
#   Description: Maximum number of containers to run for the service when auto scaling out
#   Default: 2
#   MinValue: 1
#   ConstraintDescription: Value must be at least one

Resources:
  # ------------------------------------------------------------#
  # ECS Cluster
  # ------------------------------------------------------------#
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub "${ProjectName}-${ECSClusterName}"

  # ------------------------------------------------------------#
  #  ECS LogGroup
  # ------------------------------------------------------------#
  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/ecs/logs/${ProjectName}-ecs-group"

  # ------------------------------------------------------------#
  #  ECS Task Execution Role
  # ------------------------------------------------------------#
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-ECSTaskExecutionRolePolicy"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # ------------------------------------------------------------#
  #  ECS TaskDefinition
  # ------------------------------------------------------------#
  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Cpu: !Ref ECSTaskCPUUnit
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Family: !Sub "${ProjectName}-${ECSTaskName}"
      Memory: !Ref ECSTaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE

      #ContainerDefinitions
      ContainerDefinitions:
        - Name: !Sub "${ProjectName}-${ECSContainerName}"
          Image: !Ref ECSImageName
          Environment:
            - Name: AUTH0_BASE_URL
              Value: !Ref AUTH0BaseUrl
            - Name: AUTH0_ISSUER_BASE_URL
              Value: !Ref AUTH0IssuerBaseUrl
            - Name: AUTH0_SECRET
              Value: !Ref AUTH0Secret
            - Name: AUTH0_CLIENT_ID
              Value: !Ref AUTH0ClientId
            - Name: AUTH0_CLIENT_SECRET
              Value: !Ref AUTH0ClientSecret
            - Name: REDIRECT_URI
              Value: !Sub
                - "${InternetALBEndpoint}/api/auth/callback"
                - InternetALBEndpoint: !Ref AUTH0BaseUrl
            - Name: POST_LOGOUT_REDIRECT_URI
              Value: !Ref AUTH0BaseUrl
            - Name: AUDIENCE
              Value: !Sub
                - "${APIALBEndpoint}/api"
                - APIALBEndpoint: !ImportValue APIALBEndpoint
            - Name: NEXT_PUBLIC_AUDIENCE
              Value: !Sub
                - "${APIALBEndpoint}/api"
                - APIALBEndpoint: !ImportValue APIALBEndpoint
            - Name: NEXT_PUBLIC_TRANSLATION_API_URL
              Value: !Ref NEXTPublicTranslationApiUrl
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Ref ProjectName
          MemoryReservation: 128
          PortMappings:
            - HostPort: 3000
              Protocol: tcp
              ContainerPort: 3000

  # ------------------------------------------------------------#
  #  ECS Service
  # ------------------------------------------------------------#
  ECSService:
    Type: AWS::ECS::Service
    DependsOn: InternetALBListenerHTTPS
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref ECSTaskDesiredCount
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 3000
          ContainerName: !Sub "${ProjectName}-${ECSContainerName}"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue ECSForNextjsSecurityGroupName
          Subnets:
            - !ImportValue ECSSubnet3Name
            - !ImportValue ECSSubnet4Name
      ServiceName: !Sub "${ProjectName}-${ECSServiceName}"
      TaskDefinition: !Ref ECSTaskDefinition
  # ------------------------------------------------------------#
  #  Auto Scaling Service
  # ------------------------------------------------------------#
  # ServiceAutoScalingRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: application-autoscaling.amazonaws.com
  #           Action: sts:AssumeRole
  #     Path: /
  #     Policies:
  #       - PolicyName: !Sub "${ProjectName}-${ECSContainerName}-autoscaling"
  #         PolicyDocument:
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - application-autoscaling:*
  #                 - cloudwatch:DescribeAlarms
  #                 - cloudwatch:PutMetricAlarm
  #                 - ecs:DescribeServices
  #                 - ecs:UpdateService
  #               Resource: '*'

  # ServiceScalingTarget:
  #   Type: AWS::ApplicationAutoScaling::ScalableTarget
  #   Properties:
  #     MinCapacity: !Ref TaskMinContainerCount
  #     MaxCapacity: !Ref TaskMaxContainerCount
  #     ResourceId: !Sub
  #       - service/${EcsClusterName}/${EcsDefaultServiceName}
  #       - EcsClusterName: !Ref ECSCluster
  #         EcsDefaultServiceName: !Sub "${ProjectName}-${ECSServiceName}"
  #     RoleARN: !GetAtt ServiceAutoScalingRole.Arn
  #     ScalableDimension: ecs:service:DesiredCount
  #     ServiceNamespace: ecs
  #   DependsOn:
  #     - ECSService
  #     - ServiceAutoScalingRole

  # ServiceScaleOutPolicy:
  #   Type: AWS::ApplicationAutoScaling::ScalingPolicy
  #   Properties:
  #     PolicyName: !Sub "${ProjectName}-${ECSServiceName}-ScaleOutPolicy"
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref ServiceScalingTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - ScalingAdjustment: 1
  #           MetricIntervalLowerBound: 0
  #   DependsOn: ServiceScalingTarget

  # ServiceScaleInPolicy:
  #   Type: AWS::ApplicationAutoScaling::ScalingPolicy
  #   Properties:
  #     PolicyName: !Sub "${ProjectName}-${ECSServiceName}-ScaleInPolicy"
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref ServiceScalingTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - ScalingAdjustment: -1
  #           MetricIntervalUpperBound: 0
  #   DependsOn: ServiceScalingTarget

  # ServiceScaleOutAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "${ProjectName}-${ECSServiceName}-ScaleOutAlarm"
  #     EvaluationPeriods: !Ref ServiceScaleEvaluationPeriods
  #     Statistic: Average
  #     TreatMissingData: notBreaching
  #     Threshold: !Ref ServiceCpuScaleOutThreshold
  #     AlarmDescription: Alarm to add capacity if CPU is high
  #     Period: 60
  #     AlarmActions:
  #       - !Ref ServiceScaleOutPolicy
  #     Namespace: AWS/ECS
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !Sub "${ProjectName}-${ECSServiceName}"
  #     ComparisonOperator: GreaterThanThreshold
  #     MetricName: CPUUtilization
  #   DependsOn:
  #     - ECSService
  #     - ServiceScaleOutPolicy

  # ServiceScaleInAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "${ProjectName}-${ECSServiceName}-ScaleInAlarm"
  #     EvaluationPeriods: !Ref ServiceScaleEvaluationPeriods
  #     Statistic: Average
  #     TreatMissingData: notBreaching
  #     Threshold: !Ref ServiceCpuScaleInThreshold
  #     AlarmDescription: Alarm to reduce capacity if container CPU is low
  #     Period: 300
  #     AlarmActions:
  #       - !Ref ServiceScaleInPolicy
  #     Namespace: AWS/ECS
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !Sub "${ProjectName}-${ECSServiceName}"
  #     ComparisonOperator: LessThanThreshold
  #     MetricName: CPUUtilization
  #   DependsOn:
  #     - ECSService
  #     - ServiceScaleInPolicy

Outputs:
  AUTH0BaseUrlName:
    Value: !Ref AUTH0BaseUrl
    Export:
      Name: AUTH0BaseUrlName
